<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">

	<bean id="myModule" class="com.bit.sts05.service.MyModuleImpl"></bean>

	<!-- 어노테이션을 통해 빈 객체를 생성 할 수 있음 -->
	<!-- <bean id="userBefore"  class="com.bit.sts05.utils.UserBefore"></bean> -->
	<bean id="userAfter"  class="com.bit.sts05.utils.UserAfter"></bean>
	<bean id="userAround" class="com.bit.sts05.utils.UserAround"></bean>
	
	<!-- <aop:config>
		<aop:pointcut expression="execution(* com.bit.sts05.service.MyModule.func*(..))" id="modulePointCut"/>
		<aop:aspect ref="userBefore">
			<aop:before method="beforeTargetMethod" pointcut-ref="modulePointCut"/>
		</aop:aspect>
		
		<aop:aspect ref="userAfter">
			<aop:after method="afterTargetMethod" pointcut-ref="modulePointCut"/>
			<aop:after-returning
				method="afterReturningTargetMethod" 
				pointcut-ref="modulePointCut"
				returning="retVal"/>
			<aop:after-throwing
				method="afterThrowingTargetMethod" 
				pointcut-ref="modulePointCut"
				throwing="exception"/>
		</aop:aspect>
		
		<aop:aspect ref="userAround">
			<aop:around
				method="aroundTargetMethod" 
				pointcut-ref="modulePointCut"/>
		</aop:aspect>
	</aop:config> -->
	
	<!-- 컴포넌트 스캔 -> 빈 객체 생성 따로 X -->
	<context:component-scan base-package="com.bit.sts05.utils"/>
	
	<!-- 프록시 설정 (이전에 bean으로 했던 것) -->
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
</beans>
