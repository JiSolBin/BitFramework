<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

	<!-- BasicDataSource 사용 : 종속성 탈피 -->
	<!-- 커넥션 1개, 최대 5개 까지 늘릴 수 있음, 이후 3개로 줄임 -->
	<bean id="dataSource" 
		class="org.apache.commons.dbcp.BasicDataSource"
		p:driverClassName="com.mysql.cj.jdbc.Driver"
		p:url="jdbc:mysql://localhost:3306/scott"
		p:username="user01" p:password="1234"
		p:maxActive="3" p:maxIdle="5" p:minIdle="1"
		p:maxWait="3000">
	</bean>
	
	<bean id="jdbcTemplate"
		class="org.springframework.jdbc.core.JdbcTemplate"
		p:dataSource-ref="dataSource">
	</bean>
	
	<bean id="autoLogging" class="com.bit.sts05.utils.AutoLogging"></bean>
	<aop:config>
		<aop:pointcut expression="execution(* com.bit.sts05.model.EmpDao.*(..))" id="beforelog"/>
		<aop:aspect ref="autoLogging">
			<aop:before method="beforeAop" pointcut-ref="beforelog"/>
		</aop:aspect>
	</aop:config>
	<!-- 이걸로 Dao 객체 만들고 -->
	<context:component-scan base-package="com.bit.sts05.model" />
	
	<!-- 트랜잭션 -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	    <property name="dataSource" ref="dataSource"/>
	</bean>
	  
	<!-- <tx:advice id="txAdvice" transaction-manager="txManager">
	   <tx:attributes>
	      <tx:method name="*" rollback-for="Exception"/>
	   </tx:attributes>
	</tx:advice>
	
	<aop:config>
	   <aop:pointcut id="requiredTx"
	      expression="execution(* com.bit.sts05.service.EmpService.*(..))"/>
	   <aop:advisor advice-ref="txAdvice"
	      pointcut-ref="requiredTx" />
	</aop:config> -->
	<context:component-scan base-package="com.bit.sts05.service" />
	<tx:annotation-driven transaction-manager="txManager"/>
	
	<!-- 이걸로 proxy 객체 만듦 -->
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
</beans>
